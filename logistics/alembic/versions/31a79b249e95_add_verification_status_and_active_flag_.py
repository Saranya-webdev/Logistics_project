"""Add verification_status and active_flag columns

Revision ID: 31a79b249e95
Revises: ac1a5570acc0
Create Date: 2025-01-22 16:48:12.695220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '31a79b249e95'
down_revision: Union[str, None] = 'ac1a5570acc0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_table('users')
    op.alter_column('address_books', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_constraint('address_books_ibfk_1', 'address_books', type_='foreignkey')
    op.create_foreign_key(None, 'address_books', 'customer', ['customer_id'], ['customer_id'])
    op.alter_column('booking', 'drop_location',
               existing_type=mysql.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('booking', 'payment_status',
               existing_type=mysql.ENUM('picked', 'paid', 'pending'),
               type_=sa.Enum('picked', 'transit', 'delivered', name='payment_status_enum'),
               existing_nullable=False,
               existing_server_default=sa.text("'picked'"))
    op.alter_column('booking', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_column('booking', 'from_address_id')
    op.drop_column('booking', 'cost')
    op.drop_column('booking', 'to_address_id')
    op.add_column('customer', sa.Column('active_flag', sa.Integer(), nullable=True))
    op.alter_column('customer', 'verification_status',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_column('customer', 'is_active')
    op.alter_column('customer_business', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('customer_business', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.alter_column('customer_credential', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('customer_credential', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.create_foreign_key(None, 'customer_credential', 'customer', ['customer_id'], ['customer_id'])
    op.drop_column('customer_credential', 'created_by')
    op.drop_column('customer_credential', 'updated_by')
    op.alter_column('customer_margin', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('customer_margin', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.create_foreign_key(None, 'customer_margin', 'customer', ['customer_id'], ['customer_id'])
    op.alter_column('customer_payment', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'customer_payment', 'customer', ['customer_id'], ['customer_id'])
    op.add_column('quotation', sa.Column('quotation_status', sa.Enum('pending', 'confirmed', 'shipped', 'delivered', 'cancelled', name='pickupstatus'), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('quotation', 'quotation_status')
    op.drop_constraint(None, 'customer_payment', type_='foreignkey')
    op.alter_column('customer_payment', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'customer_margin', type_='foreignkey')
    op.alter_column('customer_margin', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.alter_column('customer_margin', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.add_column('customer_credential', sa.Column('updated_by', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customer_credential', sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customer_credential', type_='foreignkey')
    op.alter_column('customer_credential', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.alter_column('customer_credential', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('customer_business', 'is_active',
               existing_type=mysql.TINYINT(display_width=1),
               comment=None,
               existing_comment='Indicates if the customer is active or not',
               existing_nullable=True,
               existing_server_default=sa.text("'1'"))
    op.alter_column('customer_business', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.add_column('customer', sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=True))
    op.alter_column('customer', 'verification_status',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.drop_column('customer', 'active_flag')
    op.add_column('booking', sa.Column('to_address_id', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('booking', sa.Column('cost', mysql.DECIMAL(precision=10, scale=2), nullable=False))
    op.add_column('booking', sa.Column('from_address_id', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.alter_column('booking', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('booking', 'payment_status',
               existing_type=sa.Enum('picked', 'transit', 'delivered', name='payment_status_enum'),
               type_=mysql.ENUM('picked', 'paid', 'pending'),
               existing_nullable=False,
               existing_server_default=sa.text("'picked'"))
    op.alter_column('booking', 'drop_location',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_constraint(None, 'address_books', type_='foreignkey')
    op.create_foreign_key('address_books_ibfk_1', 'address_books', 'customer', ['customer_id'], ['customer_id'], ondelete='CASCADE')
    op.alter_column('address_books', 'customer_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.create_table('users',
    sa.Column('user_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('password_hash', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('mobile', mysql.VARCHAR(length=15), nullable=True),
    sa.Column('role', mysql.ENUM('logistic_company', 'agent', 'employee', 'customer'), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=False),
    sa.Column('updated_at', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=False)
    # ### end Alembic commands ###
